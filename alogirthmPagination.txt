range = 1 // artinya halaman yang ditampilkan adalah +1/-1 dari current page 

1, ..., 5, 6, 7, ..., 12. 	(page = 6, n = 7)
1, ..., 4, 5, 6, ..., 12. 	(page = 5, n = 7)
1, 2, ..., 12. 			(page = 1, n = 4)		x
1, 2, 3, ..., 12. 		(page = 2, n = 5)		x
1, 2, 3, 4, ..., 12. 		(page = 3, n = 6)		x
1, ..., 3, 4, 5, ..., 12.	(page = 4, n = 7)	
1, ..., 11, 12.			(page = 12, n = 4) 	x
1, ..., 10, 11, 12.		(page = 11, n = 5) 	x
1, ..., 9, 10, 11, 12.		(page = 10, n = 6) 	x

disini kita tandai fase yang unik dengan tanda x

bisa kita lihat bahwa fase yang unik selalu terjadi jika "page" <= 3 untuk awal dan "page" >= (12 - 3) untuk akhir.
di mana angka 3 ATAU 3 digit angka ATAU range angka merupakan hasil dari page + 1 dan page - 1.

// Online Javascript Editor for free
// Write, Edit and Run your Javascript code using JS Online Compiler

let totalPage = 12;
let radius = 1;
let page = 10;
let pages = [];
let gap = 1; // mengecek gap, jika gap lebih dari 1 maka kasih ...
let temp = 0; // menampung nilai terakhir yang diappend ke array

// pendekatan 1
// kelebihan  line code lebih sedikit, kelamahan: "bagaimana jika totalPage ada 1000, masa harus dilooping satu-satu?"
for(let i = 1; i <= totalPage ; i++){
    if((i >= (page - radius) && i <= (page + radius)) || i == 1|| i == totalPage){
        if((i - temp) > 1){ // jika gap lebih dari 1 undefined
            pages.push(undefined);
        }
        pages.push(i);
        temp = i;
    }
}

// if(page <= )


console.log(pages);

// Pendekatan 2
// kelebihan: ringan, tidak memakan banyak memori, kekurangan: line code lebih banyak
// pendekatan 2
let endPage = page + radius;
endPage = endPage <= totalPage ? endPage : totalPage;
console.log(endPage);
let startPage = page - radius;
startPage = startPage >= 1 ? startPage : 1;
console.log(startPage);

for(let i = startPage ; i <= endPage ; i++){
    pages.push(i);
}

// console.log(pages);

if((startPage - 1) > 1){
    pages.unshift(undefined);
}

// console.log(pages);

if(pages[0] !== 1){
    pages.unshift(1);
}

// console.log(pages);

if(endPage < (totalPage - 1)){
    pages.push(undefined);
}

// console.log(pages);

if(pages[pages.length - 1] !== totalPage){
    pages.push(totalPage);
}

console.log(pages);


	
